// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String            @id @default(cuid())
  email              String            @unique
  name               String
  password           String
  isVerified         Boolean           @default(false)
  verificationToken  String?
  resetPasswordToken String?
  resetTokenExpiry   DateTime?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  workspaces         WorkspaceMember[]
  brands             BrandMember[]
  Workspace          Workspace[]
}

model Workspace {
  id        String            @id @default(cuid())
  name      String
  ownerId   String
  owner     User              @relation(fields: [ownerId], references: [id])
  members   WorkspaceMember[]
  brands    Brand[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model WorkspaceMember {
  id          String        @id @default(cuid())
  userId      String
  workspaceId String
  role        WorkspaceRole

  workspace Workspace @relation(fields: [workspaceId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@unique([workspaceId, userId])
}

model Brand {
  id          String        @id @default(cuid())
  name        String
  workspaceId String
  workspace   Workspace     @relation(fields: [workspaceId], references: [id])
  members     BrandMember[]
  campaigns   Campaign[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model BrandMember {
  id      String    @id @default(cuid())
  userId  String
  brandId String
  role    BrandRole

  brand Brand @relation(fields: [brandId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([brandId, userId])
}

model Campaign {
  id        String         @id @default(cuid())
  name      String
  status    CampaignStatus @default(DRAFT)
  brandId   String
  brand     Brand          @relation(fields: [brandId], references: [id])
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

enum WorkspaceRole {
  ADMIN
  USER
}

enum BrandRole {
  ADMIN
  MANAGER
  CLIENT
}

enum CampaignStatus {
  DRAFT
  ACTIVE
  COMPLETED
  ARCHIVED
}
